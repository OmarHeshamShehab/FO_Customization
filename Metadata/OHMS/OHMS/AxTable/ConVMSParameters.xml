<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ConVMSParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ConVMSParameters extends common
{


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    /// <summary>
    ///Cannot delete transaction
    /// </summary>
    /// <returns> returns error message that this transaction cannot be deleted</returns>
    public boolean validateDelete()
    {
        return checkFailed("@SYS23721"); 
    }

]]></Source>
			</Method>
			<Method>
				<Name>Find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the ConVMSParameters record with Key == 0. If the record does not exist and is not temporary, it creates a new parameter.
    /// </summary>
    /// <param name="_forUpdate">Specifies whether to select the record for update.</param>
    /// <returns>
    /// Returns the ConVMSParameters record where Key == 0. If the record does not exist, it creates a new parameter.
    /// </returns>
    public static ConVMSParameters Find(boolean _forUpdate = false)
    {
        ConVMSParameters parm;
        parm.selectForUpdate(_forUpdate);
        select firstonly parm where parm.Key == 0;
        if (!parm && !parm.istmp())
        {
            Company::createParameter(parm);
        }
        return parm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>Exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if there is any record in the ConVMSParameters table.
    /// </summary>
    /// <returns>
    /// Returns true if a record exists in the ConVMSParameters table; otherwise, false.
    /// </returns>
    public static boolean Exist()
    {
        return (select firstonly RecId from ConVMSParameters).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
   /// <summary>
   ///  We set the Table Cache property to EntireTable. Whenever this table is   updated, 
   ///  we will need to flush the cache so that the system uses the updated values.
   /// </summary>
    public void update()
   {
        super();
        flush ConVMSParameters;
   }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@ConVMS:VehiclemanagementparameterHT</DeveloperDocumentation>
	<Label>@ConVMS:Vehiclemanagementparameter</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Parameter</TableGroup>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<CacheLookup>EntireTable</CacheLookup>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Defaults</Name>
			<Label>@SYS334126</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DefaultVehicleGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DefaultVehicleGroupId</Name>
			<ExtendedDataType>ConVMSVehicleGroupId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Key</Name>
			<ExtendedDataType>ParametersKey</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>KeyIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxTableIndexField>
					<DataField>Key</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>ConVMSVehicleGroup</Name>
			<Cardinality>ZeroOne</Cardinality>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>ConVMSVehicleGroup</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>DefaultVehicleGroupId</Name>
					<Field>DefaultVehicleGroupId</Field>
					<RelatedField>VehicleGroupId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>